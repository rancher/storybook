"use strict";(self.webpackChunkdashboard_storybook=self.webpackChunkdashboard_storybook||[]).push([[2644],{"./stories/components/Alert.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Template:()=>Template,__namedExportsOrder:()=>__namedExportsOrder,alertError:()=>alertError,alertInfo:()=>alertInfo,alertSuccess:()=>alertSuccess,alertWarning:()=>alertWarning,default:()=>Alert_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),vue_esm_bundler=__webpack_require__("./node_modules/vue/dist/vue.esm-bundler.js");var BadgeState=__webpack_require__("../pkg/rancher-components/src/components/BadgeState/BadgeState.vue");const STATUS_CLASS_MAP={success:{color:"bg-success",icon:"icon-checkmark"},warning:{color:"bg-warning",icon:"icon-warning"},info:{color:"bg-info",icon:"icon-info"},error:{color:"bg-error",icon:"icon-error"}},Alertvue_type_script_lang_js={components:{BadgeState:BadgeState.A},props:{status:{type:String,validator:value=>Object.keys(STATUS_CLASS_MAP).includes(value),required:!0},message:{type:String,required:!0}},computed:{color(){return STATUS_CLASS_MAP[this.status].color},icon(){return STATUS_CLASS_MAP[this.status].icon}}};const __exports__=(0,__webpack_require__("./node_modules/@storybook/preset-vue3-webpack/node_modules/vue-loader/dist/exportHelper.js").A)(Alertvue_type_script_lang_js,[["render",function render(_ctx,_cache,$props,$setup,$data,$options){const _component_BadgeState=(0,vue_esm_bundler.g2)("BadgeState");return(0,vue_esm_bundler.uX)(),(0,vue_esm_bundler.Wv)(_component_BadgeState,{label:$props.message,color:$options.color,icon:$options.icon},null,8,["label","color","icon"])}]]),Alert=__exports__;__exports__.__docgenInfo={exportName:"default",displayName:"Alert",description:"",tags:{},props:[{name:"status",type:{name:"string"},required:!0},{name:"message",type:{name:"string"},required:!0}],sourceFiles:["/home/runner/work/dashboard/dashboard/shell/components/Alert.vue"]};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Template=(args,{argTypes})=>({components:{Alert},props:Object.keys(argTypes),template:'<Alert v-bind="$props" />'});function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h3:"h3",ul:"ul",li:"li"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Components/Alert",component:Alert,argTypes:{status:{options:["success","warning","info","error"],control:{type:"select"}}}}),"\n","\n",(0,jsx_runtime.jsx)(_components.h1,{id:"alert",children:"Alert"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the Alert component to show the current status of another interface element or to display a notification."}),"\n",(0,jsx_runtime.jsx)("br",{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"description",children:"Description"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"Don't use long texts within a Alert. Whenever possible, limit it to a maximum of 3 words or less."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"Color can be used to emphasize a status, to inform or to associate information."}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(dist.Hl,{children:[(0,jsx_runtime.jsx)(dist.gG,{name:"Alert Success",args:{message:"PID Pressure",status:"success"},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.gG,{name:"Alert Warning",args:{message:"Disk Pressure",status:"warning"},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.gG,{name:"Alert Info",args:{message:"Memory Pressure",status:"info"},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.gG,{name:"Alert Error",args:{message:"kubelet",status:"error"},children:Template.bind({})})]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"import",children:"Import"}),"\n",(0,jsx_runtime.jsx)(dist.kL,{language:"js",light:!0,format:!1,code:"\n     import Alert from '@shell/components/Alert';\n  "}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"props-table",children:"Props table"}),"\n",(0,jsx_runtime.jsx)(dist.uY,{of:Alert})]})}const alertSuccess=Template.bind({});alertSuccess.storyName="Alert Success",alertSuccess.args={message:"PID Pressure",status:"success"},alertSuccess.parameters={storySource:{source:'(args, {\n  argTypes\n}) => ({\n  components: {\n    Alert\n  },\n  props: Object.keys(argTypes),\n  template: "<Alert v-bind=\\"$props\\" />"\n})'}};const alertWarning=Template.bind({});alertWarning.storyName="Alert Warning",alertWarning.args={message:"Disk Pressure",status:"warning"},alertWarning.parameters={storySource:{source:'(args, {\n  argTypes\n}) => ({\n  components: {\n    Alert\n  },\n  props: Object.keys(argTypes),\n  template: "<Alert v-bind=\\"$props\\" />"\n})'}};const alertInfo=Template.bind({});alertInfo.storyName="Alert Info",alertInfo.args={message:"Memory Pressure",status:"info"},alertInfo.parameters={storySource:{source:'(args, {\n  argTypes\n}) => ({\n  components: {\n    Alert\n  },\n  props: Object.keys(argTypes),\n  template: "<Alert v-bind=\\"$props\\" />"\n})'}};const alertError=Template.bind({});alertError.storyName="Alert Error",alertError.args={message:"kubelet",status:"error"},alertError.parameters={storySource:{source:'(args, {\n  argTypes\n}) => ({\n  components: {\n    Alert\n  },\n  props: Object.keys(argTypes),\n  template: "<Alert v-bind=\\"$props\\" />"\n})'}};const componentMeta={title:"Components/Alert",component:Alert,argTypes:{status:{options:["success","warning","info","error"],control:{type:"select"}}},tags:["stories-mdx"],includeStories:["alertSuccess","alertWarning","alertInfo","alertError"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const Alert_stories=componentMeta,__namedExportsOrder=["Template","alertSuccess","alertWarning","alertInfo","alertError"]}}]);