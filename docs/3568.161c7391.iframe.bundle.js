(self.webpackChunkstyleguide=self.webpackChunkstyleguide||[]).push([[3568],{"../shell/assets/brand sync recursive ^\\.\\/.*\\/metadata\\.json$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./csp/metadata.json":"../shell/assets/brand/csp/metadata.json","./federal/metadata.json":"../shell/assets/brand/federal/metadata.json","./harvester/metadata.json":"../shell/assets/brand/harvester/metadata.json","./rgs/metadata.json":"../shell/assets/brand/rgs/metadata.json","./suse/metadata.json":"../shell/assets/brand/suse/metadata.json"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="../shell/assets/brand sync recursive ^\\.\\/.*\\/metadata\\.json$"},"../shell/config/query-params.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AS:()=>AS,AUTH_TEST:()=>AUTH_TEST,BACK_TO:()=>BACK_TO,CATEGORY:()=>CATEGORY,CHART:()=>CHART,CLOUD_CREDENTIAL:()=>CLOUD_CREDENTIAL,DEPRECATED:()=>DEPRECATED,DESCENDING:()=>DESCENDING,DESCRIPTION:()=>DESCRIPTION,DIFF:()=>DIFF,FLAT_VIEW:()=>FLAT_VIEW,FOCUS:()=>FOCUS,FROM_CLUSTER:()=>FROM_CLUSTER,FROM_TOOLS:()=>FROM_TOOLS,GITHUB_CODE:()=>GITHUB_CODE,GITHUB_NONCE:()=>GITHUB_NONCE,GITHUB_REDIRECT:()=>GITHUB_REDIRECT,GITHUB_SCOPE:()=>GITHUB_SCOPE,HIDDEN:()=>HIDDEN,HIDE_SIDE_NAV:()=>HIDE_SIDE_NAV,IS_SLO:()=>IS_SLO,IS_SSO:()=>IS_SSO,LOCAL:()=>LOCAL,LOGGED_OUT:()=>LOGGED_OUT,MODE:()=>MODE,NAME:()=>NAME,NAMESPACE:()=>NAMESPACE,OPERATING_SYSTEM:()=>OPERATING_SYSTEM,PAGE:()=>PAGE,PREVIEW:()=>PREVIEW,PROJECT_ID:()=>PROJECT_ID,PROVIDER:()=>PROVIDER,REPO:()=>REPO,REPO_TYPE:()=>REPO_TYPE,RKE_TYPE:()=>RKE_TYPE,SEARCH_QUERY:()=>SEARCH_QUERY,SETUP:()=>SETUP,SORT_BY:()=>SORT_BY,SPA:()=>SPA,STEP:()=>STEP,SUB_TYPE:()=>SUB_TYPE,TIMED_OUT:()=>TIMED_OUT,UPGRADED:()=>UPGRADED,VERSION:()=>VERSION,_CLONE:()=>_CLONE,_CONFIG:()=>_CONFIG,_CREATE:()=>_CREATE,_DETAIL:()=>_DETAIL,_EDIT:()=>_EDIT,_FLAGGED:()=>_FLAGGED,_GRAPH:()=>_GRAPH,_IMPORT:()=>_IMPORT,_LIST:()=>_LIST,_SPLIT:()=>_SPLIT,_STAGE:()=>_STAGE,_UNFLAG:()=>_UNFLAG,_UNIFIED:()=>_UNIFIED,_VIEW:()=>_VIEW,_YAML:()=>_YAML});const SPA="spa",LOCAL="local",SETUP="setup",STEP="step",LOGGED_OUT="logged-out",IS_SSO="is-sso",IS_SLO="is-slo",UPGRADED="upgraded",TIMED_OUT="timed-out",AUTH_TEST="test",BACK_TO="back-to",GITHUB_CODE="code",GITHUB_NONCE="state",GITHUB_SCOPE="scope",GITHUB_REDIRECT="redirect_uri",_FLAGGED=null,_UNFLAG=void 0,SEARCH_QUERY="q",SORT_BY="sort",DESCENDING="desc",PAGE="page",MODE="mode",_CREATE="create",_VIEW="view",_EDIT="edit",_LIST="list",_CLONE="clone",_STAGE="stage",_IMPORT="import",AS="as",_DETAIL="detail",_CONFIG="config",_YAML="yaml",_GRAPH="graph",FOCUS="focus",PREVIEW="preview",DIFF="diff",_UNIFIED="unified",_SPLIT="split",SUB_TYPE="type",RKE_TYPE="rkeType",REPO_TYPE="repo-type",REPO="repo",CHART="chart",VERSION="version",NAME="name",NAMESPACE="namespace",DESCRIPTION="description",CATEGORY="category",OPERATING_SYSTEM="os",DEPRECATED="deprecated",HIDDEN="hidden",FROM_TOOLS="tools",FROM_CLUSTER="cluster",HIDE_SIDE_NAV="hide-side-nav",PROVIDER="provider",CLOUD_CREDENTIAL="cloud",PROJECT_ID="projectId",FLAT_VIEW="flatView"},"../shell/store/prefs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{qv:()=>HIDE_SENSITIVE,aP:()=>KEYMAP,kc:()=>ROWS_PER_PAGE});__webpack_require__("../shell/config/settings.ts");const WORKLOAD_TYPES={DEPLOYMENT:"apps.deployment",CRON_JOB:"batch.cronjob",DAEMON_SET:"apps.daemonset",JOB:"batch.job",STATEFUL_SET:"apps.statefulset",REPLICA_SET:"apps.replicaset",REPLICATION_CONTROLLER:"replicationcontroller"},{DAEMON_SET,CRON_JOB,JOB,...scalableWorkloads}=WORKLOAD_TYPES;__webpack_require__("../shell/utils/object.js"),__webpack_require__("../node_modules/console-browserify/index.js");const definitions={};const create=function(name,def,opt={}){const parseJSON=!0===opt.parseJSON,asCookie=!0===opt.asCookie,asUserPreference=!1!==opt.asUserPreference,options=opt.options,inheritFrom=opt.inheritFrom;return definitions[name]={def,options,parseJSON,asCookie,asUserPreference,inheritFrom,mangleRead:opt.mangleRead,mangleWrite:opt.mangleWrite},name},KEYMAP=(create("cluster",""),create("last-namespace",""),create("ns-by-cluster",{},{parseJSON:true}),create("workspace",""),create("open-groups",["cluster","policy","rbac","serviceDiscovery","storage","workload"],{parseJSON:true}),create("fav-type",[],{parseJSON:true}),create("pinned-clusters",[],{parseJSON:true}),create("group-by","namespace"),create("diff","unified",{options:["unified","split"]}),create("theme","auto",{options:["light","auto","dark"],asCookie:true,parseJSON:true,mangleRead:x=>x.replace(/^ui-/,""),mangleWrite:x=>`ui-${x}`}),create("pcs","",{asCookie:true,asUserPreference:!1}),create("locale","en-us",{asCookie:true}),create("keymap","sublime",{options:["sublime","emacs","vim"]})),ROWS_PER_PAGE=create("per-page",100,{options:[10,25,50,100],parseJSON:true}),HIDE_SENSITIVE=(create("logs-wrap",!0,{parseJSON:true}),create("logs-time",!0,{parseJSON:true}),create("logs-range","30 minutes",{parseJSON:true}),create("hide-repos",[],{parseJSON:true}),create("hide-desc",[],{parseJSON:true}),create("hide-sensitive",!0,{options:[!0,!1],parseJSON:true})),DEV=(create("show-pre-release",!1,{options:[!1,!0],parseJSON:true}),create("chart-mode","featured",{parseJSON:true}),create("date-format","ddd, MMM D YYYY",{options:["ddd, MMM D YYYY","ddd, D MMM YYYY","D/M/YYYY","M/D/YYYY","YYYY-MM-DD"]}),create("time-format","h:mm:ss a",{options:["h:mm:ss a","HH:mm:ss"]}),create("time-zone","local"),create("dev",!1,{parseJSON:true}));create("view-in-api",!1,{parseJSON:true,inheritFrom:DEV}),create("all-namespaces",!1,{parseJSON:true,inheritFrom:DEV}),create("theme-shortcut",!1,{parseJSON:true,inheritFrom:DEV}),create("last-visited","home",{parseJSON:true}),create("seen-whatsnew","",{parseJSON:true}),create("read-whatsnew","",{parseJSON:true}),create("after-login-route","home",{parseJSON:true}),create("home-page-cards",{},{parseJSON:true}),create("plugin-developer",!1,{parseJSON:true,inheritFrom:DEV}),create("provisioner","rke2",{options:["rke1","rke2"]}),create("scale-pool-prompt",null,{parseJSON:true})},"../shell/config/settings.ts":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var _a;exports.HG=void 0;var gc_types_1=__webpack_require__("../shell/utils/gc/gc-types.ts");exports.HG={VERSION_RANCHER:"server-version",VERSION_CLI:"cli-version",VERSION_MACHINE:"machine-version",VERSION_HELM:"helm-version",CLI_URL:{DARWIN:"cli-url-darwin",WINDOWS:"cli-url-windows",LINUX:"cli-url-linux"},API_HOST:"api-host",CA_CERTS:"cacerts",HIDE_LOCAL_CLUSTER:"hide-local-cluster",AUTH_TOKEN_MAX_TTL_MINUTES:"auth-token-max-ttl-minutes",KUBECONFIG_GENERATE_TOKEN:"kubeconfig-generate-token",KUBECONFIG_DEFAULT_TOKEN_TTL_MINUTES:"kubeconfig-default-token-ttl-minutes",ENGINE_URL:"engine-install-url",ENGINE_ISO_URL:"engine-iso-url",FIRST_LOGIN:"first-login",INGRESS_IP_DOMAIN:"ingress-ip-domain",SERVER_URL:"server-url",RKE_METADATA_CONFIG:"rke-metadata-config",EULA_AGREED:"eula-agreed",AUTH_USER_INFO_MAX_AGE_SECONDS:"auth-user-info-max-age-seconds",AUTH_USER_SESSION_TTL_MINUTES:"auth-user-session-ttl-minutes",AUTH_USER_INFO_RESYNC_CRON:"auth-user-info-resync-cron",AUTH_LOCAL_VALIDATE_DESC:"auth-password-requirements-description",PASSWORD_MIN_LENGTH:"password-min-length",CLUSTER_TEMPLATE_ENFORCEMENT:"cluster-template-enforcement",UI_INDEX:"ui-index",UI_DASHBOARD_INDEX:"ui-dashboard-index",UI_DASHBOARD_HARVESTER_LEGACY_PLUGIN:"ui-dashboard-harvester-legacy-plugin",UI_OFFLINE_PREFERRED:"ui-offline-preferred",SYSTEM_DEFAULT_REGISTRY:"system-default-registry",UI_ISSUES:"ui-issues",PL:"ui-pl",PL_RANCHER_VALUE:"rancher",SUPPORTED:"has-support",BANNERS:"ui-banners",ISSUES:"ui-issues",BRAND:"ui-brand",LOGO_LIGHT:"ui-logo-light",LOGO_DARK:"ui-logo-dark",BANNER_LIGHT:"ui-banner-light",BANNER_DARK:"ui-banner-dark",LOGIN_BACKGROUND_LIGHT:"ui-login-background-light",LOGIN_BACKGROUND_DARK:"ui-login-background-dark",PRIMARY_COLOR:"ui-primary-color",LINK_COLOR:"ui-link-color",COMMUNITY_LINKS:"ui-community-links",FAVICON:"ui-favicon",UI_PERFORMANCE:"ui-performance",UI_CUSTOM_LINKS:"ui-custom-links",UI_SUPPORTED_K8S_VERSIONS:"ui-k8s-supported-versions-range",THEME:"ui-theme",SYSTEM_NAMESPACES:"system-namespaces",CLUSTER_AGENT_DEFAULT_AFFINITY:"cluster-agent-default-affinity",FLEET_AGENT_DEFAULT_AFFINITY:"fleet-agent-default-affinity",ADD_EXTENSION_REPOS_BANNER_DISPLAY:"display-add-extension-repos-banner",AGENT_TLS_MODE:"agent-tls-mode",USER_RETENTION_CRON:"user-retention-cron",USER_RETENTION_DRY_RUN:"user-retention-dry-run",USER_LAST_LOGIN_DEFAULT:"user-last-login-default",DISABLE_INACTIVE_USER_AFTER:"disable-inactive-user-after",DELETE_INACTIVE_USER_AFTER:"delete-inactive-user-after",K3S_UPGRADER_UNINSTALL_CONCURRENCY:"k3s-based-upgrader-uninstall-concurrency"},(_a={})[exports.HG.CA_CERTS]={kind:"multiline",readOnly:!0},_a[exports.HG.ENGINE_URL]={},_a[exports.HG.ENGINE_ISO_URL]={},_a[exports.HG.PASSWORD_MIN_LENGTH]={kind:"integer",ruleSet:[{name:"betweenValues",key:"Password",factoryArg:[2,256]},{name:"isInteger",key:"Password"},{name:"isPositive",key:"Password"},{name:"isOctal",key:"Password"}]},_a[exports.HG.INGRESS_IP_DOMAIN]={},_a[exports.HG.AUTH_USER_INFO_MAX_AGE_SECONDS]={},_a[exports.HG.AUTH_USER_SESSION_TTL_MINUTES]={},_a[exports.HG.AUTH_TOKEN_MAX_TTL_MINUTES]={},_a[exports.HG.KUBECONFIG_GENERATE_TOKEN]={kind:"boolean"},_a[exports.HG.KUBECONFIG_DEFAULT_TOKEN_TTL_MINUTES]={kind:"integer"},_a[exports.HG.AUTH_USER_INFO_RESYNC_CRON]={},_a[exports.HG.SERVER_URL]={kind:"url",canReset:!0},_a[exports.HG.RKE_METADATA_CONFIG]={kind:"json"},_a[exports.HG.SYSTEM_DEFAULT_REGISTRY]={},_a[exports.HG.UI_INDEX]={},_a[exports.HG.UI_DASHBOARD_INDEX]={},_a[exports.HG.UI_OFFLINE_PREFERRED]={kind:"enum",options:["dynamic","true","false"]},_a[exports.HG.BRAND]={canReset:!0},_a[exports.HG.CLUSTER_TEMPLATE_ENFORCEMENT]={kind:"boolean"},_a[exports.HG.HIDE_LOCAL_CLUSTER]={kind:"boolean"},_a[exports.HG.AGENT_TLS_MODE]={kind:"enum",options:["strict","system-store"],warning:"agent-tls-mode"},_a[exports.HG.K3S_UPGRADER_UNINSTALL_CONCURRENCY]={kind:"integer",ruleSet:[{name:"minValue",factoryArg:1}]},gc_types_1.GC_DEFAULTS},"../shell/utils/gc/gc-types.ts":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GC_DEFAULTS=void 0,exports.GC_DEFAULTS={enabled:!1,enabledInterval:!0,interval:300,enabledOnNavigate:!0,ageThreshold:120,countThreshold:500}},"../shell/assets/brand/csp/metadata.json":module=>{"use strict";module.exports=JSON.parse('{"hasStylesheet":"true"}')},"../shell/assets/brand/federal/metadata.json":module=>{"use strict";module.exports=JSON.parse('{"hasStylesheet":"false"}')},"../shell/assets/brand/harvester/metadata.json":module=>{"use strict";module.exports=JSON.parse('{"hasStylesheet":"false"}')},"../shell/assets/brand/rgs/metadata.json":module=>{"use strict";module.exports=JSON.parse('{"hasStylesheet":"false"}')},"../shell/assets/brand/suse/metadata.json":module=>{"use strict";module.exports=JSON.parse('{"hasStylesheet":"true"}')}}]);